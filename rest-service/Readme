The exercise involves creating a REST service that produces a json array of contacts including a method to add new contacts to the database.
For this exercise, the "database" is just a collection held in memory. The collection is seeded during instantiation but does not persist
beyond the runtime environment.

Here are the requirements:
1. Write a ContactDao that implements the abstract methods in the AbstractContactDao. The ContactDao should implement the Singleton pattern.
2. Complete the addContact and getContacts methods of the ContactService using the ContactDao to read/update the "database".
   
3. Build the jar with Maven.
3. When you are finished, the unit tests in ContactServiceTest should all pass and you should be able to run the Application 
   and access the service through Postman or some other REST client.
   GET http://localhost:8080/contact should list all the records in ascending order name (lastname, firstname)
   GET http://localhost:8080/contact?sort=DESC should list all records in descending order by name.
   GET http://localhost:8080/contact?lastName=<lastname> should list all records that have the indicated lastName.
   GET http://localhost:8080/contact?email=<emailAddress> should return the record with the indicated email address.
   POST http://localhost:8080/contact should accept a multpart-form with firstName, lastName, and emailAddress as fields
                                      and should add a record to the database.

Running code : 
mvn package
java -jar target/rest-service-1.0.jar

Post : 
url 
http://localhost:8080/contact
body
{"firstName":"Ben","lastName":"Franklin","emailAddress":"ben@PoorRichard.org"}

Get email : 
url 
http://localhost:8080/contact
or 
http://localhost:8080/contact?sort=DESC
or 
http://localhost:8080/contact?lastName=Franklin
or 
http://localhost:8080/contact?email=ben@PoorRichard.org